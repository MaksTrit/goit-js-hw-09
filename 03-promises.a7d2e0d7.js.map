{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA7CQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAE4B,IAEXC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAErBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAiBH,OAAOF,EAAOG,OAGnB,GAAdF,EAAa,GAAKG,EAAY,GAAKC,GAAkB,EACvD,OAAO3B,EAAA4B,OAAOC,QAAS,6BAIc,IAAlC,IAAIC,EAAI,EAAGA,GAAKH,EAAgBG,GAAK,EAAG,CAI3C5B,EAAc4B,EAFMP,GAAcO,EAAI,GAAKJ,GAGxCK,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBJ,EAAA4B,OAAOK,QAAQ,qBAAoCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE1D+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBJ,EAAA4B,OAAOQ,QAAQ,oBAAmCF,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAI9DW,EAAEG,cAAcmB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n// Отримав необхідні значення з форми\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  const firstDelay = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountPromises = Number(amount.value);\n  \n// Виправив зауваження\n  if (firstDelay < 0 || stepDelay < 0 || amountPromises <= 0) {\n    return Notify.warning(`Please enter correct data`);\n  }\n\n// Цикл викликаючий функцію створення промісів\n  for (let i = 1; i <= amountPromises; i += 1) {\n    // Змінна поточної затримки для кожного циклу\n    const actualDelay = firstDelay + (i - 1) * stepDelay;\n\n    createPromise(i, actualDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);        \n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);       \n      });\n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","firstDelay","Number","value","stepDelay","amountPromises","Notify","warning","i","then","param","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.a7d2e0d7.js.map"}