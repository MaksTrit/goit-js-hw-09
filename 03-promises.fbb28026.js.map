{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAsCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA7CEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAE4B,MAC5BC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cACAC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAiBH,OAAOH,EAAOI,OAGnB,GAAdF,EAAa,GAAKG,EAAY,GAAKC,GAAkB,EACvD,OAAO1B,EAAA2B,OAAOC,QAAQ,6BAIe,IAAlC,IAAIC,EAAI,EAAGA,GAAKH,EAAgBG,GAAK,EAAG,CAI3C3B,EAAc2B,EAFMP,GAAcO,EAAI,GAAKJ,GAGxCK,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA2B,OAAOI,QAAQ,qBAAqB5B,QAAeC,MAAU,IAE9D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA2B,OAAOM,QAAQ,oBAAoB9B,QAAeC,MAAU,G,CAIlEW,EAAEM,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n// Отримав необхідні значення з форми\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  const firstDelay = Number(delay.value);\n  const stepDelay = Number(step.value);\n  const amountPromises = Number(amount.value);\n  \n// Виправив зауваження\n  if (firstDelay < 0 || stepDelay < 0 || amountPromises <= 0) {\n    return Notify.warning(`Please enter correct data`);\n  }\n\n// Цикл викликаючий функцію створення промісів\n  for (let i = 1; i <= amountPromises; i += 1) {\n    // Змінна поточної затримки для кожного циклу\n    const actualDelay = firstDelay + (i - 1) * stepDelay;\n\n    createPromise(i, actualDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);        \n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);       \n      });\n  }\n\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","firstDelay","Number","value","stepDelay","amountPromises","Notify","warning","i","then","success","catch","failure","reset"],"version":3,"file":"03-promises.fbb28026.js.map"}